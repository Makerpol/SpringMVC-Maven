<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.makerpol.dao.UserMapper" >
  <resultMap id="userResultMap" type="com.makerpol.entity.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="BIGINT" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="grade" property="grade" jdbcType="INTEGER" />
  </resultMap>
  
  <!-- 与相应Mapper接口中同名的方法对应 -->
	<!-- id和mapper接口中的方法名对应，resultType使用mybatis.xml中的别名 -->
	<!-- userResultMap是user-mapper.xml中定义的resultmap -->
	<!-- 获取所有用户信息 -->
	<select id="getAllUser" resultType="list" resultMap="userResultMap" parameterType="int">
         <![CDATA[         
              select * from tb_user limit #{0},#{1}
         ]]> 
	</select>
	  
	<select id="getCount" resultType="int" >
         <![CDATA[         
              select count(id) from tb_user   
         ]]> 
	</select>     
   
	<select id="getUserById" parameterType="int"  resultMap="userResultMap">    
         <![CDATA[        
             select * from tb_user where id = #{id}    
         ]]>    
	</select>  
     
	<select id="getUserByName" parameterType="string"  resultMap="userResultMap">         
         select * from tb_user where name = #{name}        
	</select>
	
	<select id="getUserList" parameterType="string" resultType="list"  resultMap="userResultMap">         
         select * from tb_user where name like concat('%',#{name},'%')   
	</select>
	
	<update id="updataUser" parameterType="com.makerpol.entity.User">
		update tb_user 
		<set>
		<if test="status != null">status = #{status,jdbcType=INTEGER},</if>   
		<if test="grade != null">grade = #{grade,jdbcType=INTEGER},</if>   
        <if test="password != null">password = #{password,jdbcType=VARCHAR},</if>
        <if test="sex != null">sex = #{sex,jdbcType=INTEGER},</if>
        <if test="email != null">email = #{email,jdbcType=VARCHAR},</if>
        <if test="birthday != null">birthday = #{birthday,jdbcType=VARCHAR},</if>
        <if test="alias != null">alias = #{alias.jdbcType=VARCHAR},</if>
        <if test="phone != null">phone = #{phone,jdbcType=BIGINT},</if>
		</set>
        
        where name = #{name} 
   </update> 
   
   <!-- 自动生成id策略 -->  
   <insert id="addUser" useGeneratedKeys="true" keyProperty="id" parameterType="com.makerpol.entity.User">   
         insert into tb_user(status,grade, name, password, sex, alias, birthday, phone, email)   
         values(#{status},#{grade}, #{name}, #{password}, #{sex}, #{alias}, #{birthday}, #{phone}, #{email})   
   </insert> 
    
    <delete id="deleteUser" parameterType="int">
        delete from tb_user where id = #{id} 
   </delete>
</mapper>